version: '3.5'
services:
  api1: # API - Instância 01
    container_name: api1
    image: rinha
    hostname: api1
    depends_on:
      - db
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    networks:
      - api_network

  api2: # API - Instância 01
    container_name: api2
    image: rinha
    hostname: api2
    depends_on:
      - db
    expose:
      - "8080"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    networks:
      - api_network

  nginx: # Load Balancer
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_started
      api2:
        condition: service_started
    ports:
      - '9999:9999'
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
    networks:
      - api_network

  db: # Banco de dados
    image: postgres
    container_name: db
    ports:
      - '5432:5432'
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1GB'
    environment:
        POSTGRES_DB: rinha
        POSTGRES_USER: cbalz
        POSTGRES_PASSWORD: 123
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - api_network

  redis: #cache
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    networks:
      - api_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1GB'

networks:
  api_network:
    driver: bridge